{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Cabbage API docs",
    "description": "API documentation for Team project 'Kabbage-05'. [Backend github repository](https://github.com/DaniilOvsyanniukov/cabbage-b05)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {"url": "https://obscure-meadow-53073.herokuapp.com"},
    {"url": "http://localhost:3001"}
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "Expense",
      "description": "Expense endpoints"
    },
    {
      "name": "Income",
      "description": "Incomes endpoints"
    }
  ],
  "paths": {
    "/api/auth/user/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/signout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout",
        "security": [{"Bearer": []}],
        "parameters": [],
        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": ["Auth"],
        "summary": "Google authentication",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {}
          },
          "403": {
            "description": "Not registered",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/current": {
      "get": {
        "tags": ["User"],
        "summary": "Get all user info",
        "security": [{"Bearer": []}],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Edit avavar",
        "security": [{"Bearer": []}],
        "parameters": [],
        "requestBody": {
          "description": "User avatar object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchUserAvatarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/LoginResponse"}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/auth/users/balance": {
      "patch": {
        "tags": ["User"],
        "summary": "Edit balance",
        "security": [{"Bearer": []}],
        "parameters": [],
        "requestBody": {
          "description": "Balance object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchBalanceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/BalanceResponse"}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/expense": {
      "get": {
        "tags": ["Expense"],
        "summary": "Get all expenses transactions",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "Month of the year",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Expense category name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExpensesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Expense"],
        "summary": "Add expense transaction",
        "security": [{"Bearer": []}],
        "parameters": [],
        "requestBody": {
          "description": "Expense object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddExpenseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddExpenseResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/expense/{transactionId}": {
      "delete": {
        "tags": ["Expense"],
        "summary": "Delete expense transaction",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/DeleteExpenseResponse"}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/income": {
      "get": {
        "tags": ["Income"],
        "summary": "Get all income transactions",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "description": "",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncomeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Income"],
        "summary": "Add income transaction",
        "security": [{"Bearer": []}],
        "parameters": [],
        "requestBody": {
          "description": "Income object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddIncomeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddIncomeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/api/income/{transactionId}": {
      "delete": {
        "tags": ["Income"],
        "summary": "Delete income transaction",
        "security": [{"Bearer": []}],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/DeleteIncomeResponse"}
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123456"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alex"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Alex"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "token": {
                "type": "string",
                "description": "",
                "example": null
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": null
              },
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "61b754d63fb24c04e8ebc11d"
              },
              "password": {
                "type": "string",
                "description": "User's password",
                "example": "$2b$10$6WKqjz8KwDiraKWnR462lOuFlz089eiNldRXF1Fi45gxyNikHWroG"
              },
              "createdAt": {
                "type": "string",
                "description": "Created date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Updated date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123456"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "61b754d63fb24c04e8ebc11d"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Alex"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "token": {
                "type": "string",
                "description": "",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxYzBmNjVhYTQ5Zjc3YjE4YTQyNGM2OCIsImlhdCI6MTY0MDAzOTY5NCwiZXhwIjoxNjQwMDgyODk0fQ.vzoU1t3qh1of39CBzn9o878FSNwUWmI9-z-ChBlVVGE"
              },
              "avatarUrl": {
                "type": "string",
                "description": "User's avatar"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 15000
              },
              "password": {
                "type": "string",
                "description": "User's password",
                "example": "$2b$10$6WKqjz8KwDiraKWnR462lOuFlz089eiNldRXF1Fi45gxyNikHWroG"
              },
              "createdAt": {
                "type": "string",
                "description": "Created date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Updated date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              }
            }
          }
        }
      },
      "PatchUserAvatarRequest": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's id",
            "example": "61c187607ba1793525f7a525"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "User's avatar"
          }
        }
      },
      "PatchBalanceRequest": {
        "required": ["balance"],
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 15000
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "code": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Balance updated"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "User's id",
                "example": "61b754d63fb24c04e8ebc11d"
              },
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Alex"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              },
              "balance": {
                "type": "number",
                "description": "User's balance",
                "example": 15000
              }
            }
          }
        }
      },
      "GetExpensesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "totalSum": {
            "type": "number",
            "example": 2000
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction's id",
                  "example": "61b754d63fb24c04e8ebc11d"
                },
                "category": {
                  "type": "string",
                  "description": "Category name",
                  "example": "продукты"
                },
                "description": {
                  "type": "string",
                  "description": "Description",
                  "example": "молоко"
                },
                "sum": {
                  "type": "number",
                  "description": "Transaction sum",
                  "example": 30
                },
                "date": {
                  "type": "integer",
                  "description": "Date",
                  "example": 1630843994253
                },
                "year": {
                  "type": "string",
                  "description": "Year",
                  "example": "2021"
                },
                "month": {
                  "type": "string",
                  "description": "Month of the year",
                  "example": "09"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User's id",
                      "example": "61b754d63fb24c04e8ebc11d"
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email",
                      "format": "email"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AddExpenseRequest": {
        "required": ["category", "description", "sum"],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category name",
            "example": "продукты"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "молоко"
          },
          "sum": {
            "type": "number",
            "description": "Transaction sum",
            "example": 30
          },
          "date": {
            "type": "string",
            "description": "Date",
            "example": "1630843994253"
          }
        }
      },
      "AddExpenseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Category name",
                "example": "продукты"
              },
              "description": {
                "type": "string",
                "description": "Description",
                "example": "молоко"
              },
              "sum": {
                "type": "number",
                "description": "Transaction sum",
                "example": 30
              },
              "date": {
                "type": "integer",
                "description": "Date",
                "example": 1630843994253
              },
              "year": {
                "type": "string",
                "description": "Year",
                "example": "2021"
              },
              "month": {
                "type": "string",
                "description": "Month of the year",
                "example": "09"
              },
              "owner": {
                "type": "string",
                "description": "User's id",
                "example": "61c187607ba1793525f7a525"
              },
              "_id": {
                "type": "string",
                "description": "Transaction's id",
                "example": "61b754d63fb24c04e8ebc11d"
              },
              "createdAt": {
                "type": "string",
                "description": "Created date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Updated date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              }
            }
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 14970
          }
        }
      },
      "DeleteExpenseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 14970
          }
        }
      },
      "GetIncomeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "totalIncome": {
            "type": "number",
            "example": 50000
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction's id",
                  "example": "61b754d63fb24c04e8ebc11d"
                },
                "category": {
                  "type": "string",
                  "description": "Category name",
                  "example": "зп"
                },
                "description": {
                  "type": "string",
                  "description": "Description",
                  "example": "моя зп"
                },
                "sum": {
                  "type": "number",
                  "description": "Transaction sum",
                  "example": 25000
                },
                "date": {
                  "type": "integer",
                  "description": "Date",
                  "example": 1630843994253
                },
                "year": {
                  "type": "string",
                  "description": "Year",
                  "example": "2021"
                },
                "month": {
                  "type": "string",
                  "description": "Month of the year",
                  "example": "09"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "User's id",
                      "example": "61b754d63fb24c04e8ebc11d"
                    },
                    "email": {
                      "type": "string",
                      "description": "User's email",
                      "format": "email"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AddIncomeRequest": {
        "required": ["category", "description", "sum"],
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category name",
            "example": "зп"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "моя зп"
          },
          "sum": {
            "type": "number",
            "description": "Transaction sum",
            "example": 25000
          },
          "date": {
            "type": "string",
            "description": "Date",
            "example": "1630843994253"
          }
        }
      },
      "AddIncomeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "category": {
                "type": "string",
                "description": "Category name",
                "example": "зп"
              },
              "description": {
                "type": "string",
                "description": "Description",
                "example": "моя зп"
              },
              "sum": {
                "type": "number",
                "description": "Transaction sum",
                "example": 25000
              },
              "date": {
                "type": "integer",
                "description": "Date",
                "example": 1630843994253
              },
              "year": {
                "type": "string",
                "description": "Year",
                "example": "2021"
              },
              "month": {
                "type": "string",
                "description": "Month of the year",
                "example": "09"
              },
              "owner": {
                "type": "string",
                "description": "User's id",
                "example": "61c187607ba1793525f7a525"
              },
              "_id": {
                "type": "string",
                "description": "Transaction's id",
                "example": "61b754d63fb24c04e8ebc11d"
              },
              "createdAt": {
                "type": "string",
                "description": "Created date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              },
              "updatedAt": {
                "type": "string",
                "description": "Updated date from MongoDB",
                "example": "2021-12-20T21:32:11.101Z"
              }
            }
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 50970
          }
        }
      },
      "DeleteIncomeResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "balance": {
            "type": "number",
            "description": "User's balance",
            "example": 28550
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
